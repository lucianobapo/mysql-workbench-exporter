<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 3.0.2 (doctrine2-annotation) on 2016-05-23 15:00:59.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace ErpNET\App\Models\Doctrine\Entities;

use Doctrine\ORM\Mapping as ORM;

/**
 * ErpNET\App\Models\Doctrine\Entities\ItemOrderSharedStat
 *
 * @ORM\Entity(repositoryClass="ItemOrderSharedStatRepository")
 * @ORM\Table(name="item_order_shared_stat", indexes={@ORM\Index(name="item_order_shared_stat_item_id_index", columns={"item_id"}), @ORM\Index(name="item_order_shared_stat_status_id_index", columns={"status_id"})})
 */
class ItemOrderSharedStat
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer", options={"unsigned":true})
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="datetime")
     */
    protected $created_at;

    /**
     * @ORM\Column(type="datetime")
     */
    protected $updated_at;

    /**
     * @ORM\Column(type="integer", options={"unsigned":true})
     */
    protected $item_id;

    /**
     * @ORM\Column(type="integer", options={"unsigned":true})
     */
    protected $status_id;

    /**
     * @ORM\ManyToOne(targetEntity="ItemOrder", inversedBy="itemOrderSharedStats")
     * @ORM\JoinColumn(name="item_id", referencedColumnName="id", nullable=false)
     */
    protected $itemOrder;

    /**
     * @ORM\ManyToOne(targetEntity="SharedStat", inversedBy="itemOrderSharedStats")
     * @ORM\JoinColumn(name="status_id", referencedColumnName="id", nullable=false)
     */
    protected $sharedStat;

    public function __construct()
    {
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \ErpNET\App\Models\Doctrine\Entities\ItemOrderSharedStat
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of created_at.
     *
     * @param \DateTime $created_at
     * @return \ErpNET\App\Models\Doctrine\Entities\ItemOrderSharedStat
     */
    public function setCreatedAt($created_at)
    {
        $this->created_at = $created_at;

        return $this;
    }

    /**
     * Get the value of created_at.
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    /**
     * Set the value of updated_at.
     *
     * @param \DateTime $updated_at
     * @return \ErpNET\App\Models\Doctrine\Entities\ItemOrderSharedStat
     */
    public function setUpdatedAt($updated_at)
    {
        $this->updated_at = $updated_at;

        return $this;
    }

    /**
     * Get the value of updated_at.
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }

    /**
     * Set the value of item_id.
     *
     * @param integer $item_id
     * @return \ErpNET\App\Models\Doctrine\Entities\ItemOrderSharedStat
     */
    public function setItemId($item_id)
    {
        $this->item_id = $item_id;

        return $this;
    }

    /**
     * Get the value of item_id.
     *
     * @return integer
     */
    public function getItemId()
    {
        return $this->item_id;
    }

    /**
     * Set the value of status_id.
     *
     * @param integer $status_id
     * @return \ErpNET\App\Models\Doctrine\Entities\ItemOrderSharedStat
     */
    public function setStatusId($status_id)
    {
        $this->status_id = $status_id;

        return $this;
    }

    /**
     * Get the value of status_id.
     *
     * @return integer
     */
    public function getStatusId()
    {
        return $this->status_id;
    }

    /**
     * Set ItemOrder entity (many to one).
     *
     * @param \ErpNET\App\Models\Doctrine\Entities\ItemOrder $itemOrder
     * @return \ErpNET\App\Models\Doctrine\Entities\ItemOrderSharedStat
     */
    public function setItemOrder(ItemOrder $itemOrder = null)
    {
        $this->itemOrder = $itemOrder;

        return $this;
    }

    /**
     * Get ItemOrder entity (many to one).
     *
     * @return \ErpNET\App\Models\Doctrine\Entities\ItemOrder
     */
    public function getItemOrder()
    {
        return $this->itemOrder;
    }

    /**
     * Set SharedStat entity (many to one).
     *
     * @param \ErpNET\App\Models\Doctrine\Entities\SharedStat $sharedStat
     * @return \ErpNET\App\Models\Doctrine\Entities\ItemOrderSharedStat
     */
    public function setSharedStat(SharedStat $sharedStat = null)
    {
        $this->sharedStat = $sharedStat;

        return $this;
    }

    /**
     * Get SharedStat entity (many to one).
     *
     * @return \ErpNET\App\Models\Doctrine\Entities\SharedStat
     */
    public function getSharedStat()
    {
        return $this->sharedStat;
    }

    public function __sleep()
    {
        return array('id', 'created_at', 'updated_at', 'item_id', 'status_id');
    }
}