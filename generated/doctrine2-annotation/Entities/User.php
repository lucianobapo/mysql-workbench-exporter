<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 3.0.2 (doctrine2-annotation) on 2016-06-25 03:44:08.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace ErpNET\App\Models\Doctrine\Entities;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * ErpNET\App\Models\Doctrine\Entities\User
 *
 * @ORM\Entity(repositoryClass="UserRepository")
 * @ORM\Table(name="users", indexes={@ORM\Index(name="users_mandante_index", columns={"mandante"}), @ORM\Index(name="users_role_id_index", columns={"role_id"}), @ORM\Index(name="users_deleted_at_index", columns={"deleted_at"})}, uniqueConstraints={@ORM\UniqueConstraint(name="users_email_unique", columns={"email"}), @ORM\UniqueConstraint(name="users_provider_id_unique", columns={"provider_id"})})
 */
class User
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer", options={"unsigned":true})
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="string", length=255)
     */
    protected $mandante;

    /**
     * @ORM\Column(name="`name`", type="string", length=255)
     */
    protected $name;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $avatar;

    /**
     * @ORM\Column(name="`password`", type="string", length=60, nullable=true)
     */
    protected $password;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $username;

    /**
     * @ORM\Column(type="string", length=255)
     */
    protected $email;

    /**
     * @ORM\Column(type="string", length=255)
     */
    protected $provider;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $provider_id;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $activation_code;

    /**
     * @ORM\Column(type="integer", nullable=true)
     */
    protected $active;

    /**
     * @ORM\Column(type="string", length=100, nullable=true)
     */
    protected $remember_token;

    /**
     * @ORM\Column(type="datetime")
     */
    protected $created_at;

    /**
     * @ORM\Column(type="datetime")
     */
    protected $updated_at;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $deleted_at;

    /**
     * @ORM\Column(type="integer", nullable=true, options={"unsigned":true})
     */
    protected $role_id;

    /**
     * @ORM\OneToOne(targetEntity="Partner", mappedBy="user")
     */
    protected $partner;

    /**
     * @ORM\ManyToOne(targetEntity="Role", inversedBy="users")
     * @ORM\JoinColumn(name="role_id", referencedColumnName="id")
     */
    protected $role;

    public function __construct()
    {
        $this->partners = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of mandante.
     *
     * @param string $mandante
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setMandante($mandante)
    {
        $this->mandante = $mandante;

        return $this;
    }

    /**
     * Get the value of mandante.
     *
     * @return string
     */
    public function getMandante()
    {
        return $this->mandante;
    }

    /**
     * Set the value of name.
     *
     * @param string $name
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setName($name)
    {
        $this->name = $name;

        return $this;
    }

    /**
     * Get the value of name.
     *
     * @return string
     */
    public function getName()
    {
        return $this->name;
    }

    /**
     * Set the value of avatar.
     *
     * @param string $avatar
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setAvatar($avatar)
    {
        $this->avatar = $avatar;

        return $this;
    }

    /**
     * Get the value of avatar.
     *
     * @return string
     */
    public function getAvatar()
    {
        return $this->avatar;
    }

    /**
     * Set the value of password.
     *
     * @param string $password
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setPassword($password)
    {
        $this->password = $password;

        return $this;
    }

    /**
     * Get the value of password.
     *
     * @return string
     */
    public function getPassword()
    {
        return $this->password;
    }

    /**
     * Set the value of username.
     *
     * @param string $username
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setUsername($username)
    {
        $this->username = $username;

        return $this;
    }

    /**
     * Get the value of username.
     *
     * @return string
     */
    public function getUsername()
    {
        return $this->username;
    }

    /**
     * Set the value of email.
     *
     * @param string $email
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setEmail($email)
    {
        $this->email = $email;

        return $this;
    }

    /**
     * Get the value of email.
     *
     * @return string
     */
    public function getEmail()
    {
        return $this->email;
    }

    /**
     * Set the value of provider.
     *
     * @param string $provider
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setProvider($provider)
    {
        $this->provider = $provider;

        return $this;
    }

    /**
     * Get the value of provider.
     *
     * @return string
     */
    public function getProvider()
    {
        return $this->provider;
    }

    /**
     * Set the value of provider_id.
     *
     * @param string $provider_id
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setProviderId($provider_id)
    {
        $this->provider_id = $provider_id;

        return $this;
    }

    /**
     * Get the value of provider_id.
     *
     * @return string
     */
    public function getProviderId()
    {
        return $this->provider_id;
    }

    /**
     * Set the value of activation_code.
     *
     * @param string $activation_code
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setActivationCode($activation_code)
    {
        $this->activation_code = $activation_code;

        return $this;
    }

    /**
     * Get the value of activation_code.
     *
     * @return string
     */
    public function getActivationCode()
    {
        return $this->activation_code;
    }

    /**
     * Set the value of active.
     *
     * @param integer $active
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setActive($active)
    {
        $this->active = $active;

        return $this;
    }

    /**
     * Get the value of active.
     *
     * @return integer
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * Set the value of remember_token.
     *
     * @param string $remember_token
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setRememberToken($remember_token)
    {
        $this->remember_token = $remember_token;

        return $this;
    }

    /**
     * Get the value of remember_token.
     *
     * @return string
     */
    public function getRememberToken()
    {
        return $this->remember_token;
    }

    /**
     * Set the value of created_at.
     *
     * @param \DateTime $created_at
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setCreatedAt($created_at)
    {
        $this->created_at = $created_at;

        return $this;
    }

    /**
     * Get the value of created_at.
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    /**
     * Set the value of updated_at.
     *
     * @param \DateTime $updated_at
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setUpdatedAt($updated_at)
    {
        $this->updated_at = $updated_at;

        return $this;
    }

    /**
     * Get the value of updated_at.
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }

    /**
     * Set the value of deleted_at.
     *
     * @param \DateTime $deleted_at
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setDeletedAt($deleted_at)
    {
        $this->deleted_at = $deleted_at;

        return $this;
    }

    /**
     * Get the value of deleted_at.
     *
     * @return \DateTime
     */
    public function getDeletedAt()
    {
        return $this->deleted_at;
    }

    /**
     * Set the value of role_id.
     *
     * @param integer $role_id
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setRoleId($role_id)
    {
        $this->role_id = $role_id;

        return $this;
    }

    /**
     * Get the value of role_id.
     *
     * @return integer
     */
    public function getRoleId()
    {
        return $this->role_id;
    }

    /**
     * Set Partner entity (one to one).
     *
     * @param \ErpNET\App\Models\Doctrine\Entities\Partner $partner
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setPartner(Partner $partner = null)
    {
        $partner->setUser($this);
        $this->partner = $partner;

        return $this;
    }

    /**
     * Get Partner entity (one to one).
     *
     * @return \ErpNET\App\Models\Doctrine\Entities\Partner
     */
    public function getPartner()
    {
        return $this->partner;
    }

    /**
     * Set Role entity (many to one).
     *
     * @param \ErpNET\App\Models\Doctrine\Entities\Role $role
     * @return \ErpNET\App\Models\Doctrine\Entities\User
     */
    public function setRole(Role $role = null)
    {
        $this->role = $role;

        return $this;
    }

    /**
     * Get Role entity (many to one).
     *
     * @return \ErpNET\App\Models\Doctrine\Entities\Role
     */
    public function getRole()
    {
        return $this->role;
    }

    public function __sleep()
    {
        return array('id', 'mandante', 'name', 'avatar', 'password', 'username', 'email', 'provider', 'provider_id', 'activation_code', 'active', 'remember_token', 'created_at', 'updated_at', 'deleted_at', 'role_id');
    }
}