<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2016-02-25 22:58:16.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace App\Models\Doctrine\Entities;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * App\Models\Doctrine\Entities\Address
 *
 * @ORM\Entity(repositoryClass="AddressRepository")
 * @ORM\Table(name="addresses", indexes={@ORM\Index(name="addresses_mandante_index", columns={"mandante"}), @ORM\Index(name="addresses_partner_id_index", columns={"partner_id"}), @ORM\Index(name="addresses_deleted_at_index", columns={"deleted_at"})})
 */
class Address
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer", options={"unsigned":true})
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="datetime")
     */
    protected $created_at;

    /**
     * @ORM\Column(type="datetime")
     */
    protected $updated_at;

    /**
     * @ORM\Column(type="datetime", nullable=true)
     */
    protected $deleted_at;

    /**
     * @ORM\Column(type="string", length=255)
     */
    protected $mandante;

    /**
     * @ORM\Column(type="integer", nullable=true, options={"unsigned":true})
     */
    protected $partner_id;

    /**
     * @ORM\Column(type="integer", options={"unsigned":true})
     */
    protected $cep;

    /**
     * @ORM\Column(type="string", length=255)
     */
    protected $logradouro;

    /**
     * @ORM\Column(type="string", length=255)
     */
    protected $numero;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $complemento;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $bairro;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $cidade;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $estado;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $pais;

    /**
     * @ORM\Column(type="string", length=255, nullable=true)
     */
    protected $obs;

    /**
     * @ORM\OneToMany(targetEntity="Order", mappedBy="address")
     * @ORM\JoinColumn(name="id", referencedColumnName="address_id", nullable=false)
     */
    protected $orders;

    /**
     * @ORM\ManyToOne(targetEntity="Partner", inversedBy="addresses")
     * @ORM\JoinColumn(name="partner_id", referencedColumnName="id")
     */
    protected $partner;

    public function __construct()
    {
        $this->orders = new ArrayCollection();
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of created_at.
     *
     * @param \DateTime $created_at
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setCreatedAt($created_at)
    {
        $this->created_at = $created_at;

        return $this;
    }

    /**
     * Get the value of created_at.
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->created_at;
    }

    /**
     * Set the value of updated_at.
     *
     * @param \DateTime $updated_at
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setUpdatedAt($updated_at)
    {
        $this->updated_at = $updated_at;

        return $this;
    }

    /**
     * Get the value of updated_at.
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->updated_at;
    }

    /**
     * Set the value of deleted_at.
     *
     * @param \DateTime $deleted_at
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setDeletedAt($deleted_at)
    {
        $this->deleted_at = $deleted_at;

        return $this;
    }

    /**
     * Get the value of deleted_at.
     *
     * @return \DateTime
     */
    public function getDeletedAt()
    {
        return $this->deleted_at;
    }

    /**
     * Set the value of mandante.
     *
     * @param string $mandante
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setMandante($mandante)
    {
        $this->mandante = $mandante;

        return $this;
    }

    /**
     * Get the value of mandante.
     *
     * @return string
     */
    public function getMandante()
    {
        return $this->mandante;
    }

    /**
     * Set the value of partner_id.
     *
     * @param integer $partner_id
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setPartnerId($partner_id)
    {
        $this->partner_id = $partner_id;

        return $this;
    }

    /**
     * Get the value of partner_id.
     *
     * @return integer
     */
    public function getPartnerId()
    {
        return $this->partner_id;
    }

    /**
     * Set the value of cep.
     *
     * @param integer $cep
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setCep($cep)
    {
        $this->cep = $cep;

        return $this;
    }

    /**
     * Get the value of cep.
     *
     * @return integer
     */
    public function getCep()
    {
        return $this->cep;
    }

    /**
     * Set the value of logradouro.
     *
     * @param string $logradouro
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setLogradouro($logradouro)
    {
        $this->logradouro = $logradouro;

        return $this;
    }

    /**
     * Get the value of logradouro.
     *
     * @return string
     */
    public function getLogradouro()
    {
        return $this->logradouro;
    }

    /**
     * Set the value of numero.
     *
     * @param string $numero
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setNumero($numero)
    {
        $this->numero = $numero;

        return $this;
    }

    /**
     * Get the value of numero.
     *
     * @return string
     */
    public function getNumero()
    {
        return $this->numero;
    }

    /**
     * Set the value of complemento.
     *
     * @param string $complemento
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setComplemento($complemento)
    {
        $this->complemento = $complemento;

        return $this;
    }

    /**
     * Get the value of complemento.
     *
     * @return string
     */
    public function getComplemento()
    {
        return $this->complemento;
    }

    /**
     * Set the value of bairro.
     *
     * @param string $bairro
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setBairro($bairro)
    {
        $this->bairro = $bairro;

        return $this;
    }

    /**
     * Get the value of bairro.
     *
     * @return string
     */
    public function getBairro()
    {
        return $this->bairro;
    }

    /**
     * Set the value of cidade.
     *
     * @param string $cidade
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setCidade($cidade)
    {
        $this->cidade = $cidade;

        return $this;
    }

    /**
     * Get the value of cidade.
     *
     * @return string
     */
    public function getCidade()
    {
        return $this->cidade;
    }

    /**
     * Set the value of estado.
     *
     * @param string $estado
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setEstado($estado)
    {
        $this->estado = $estado;

        return $this;
    }

    /**
     * Get the value of estado.
     *
     * @return string
     */
    public function getEstado()
    {
        return $this->estado;
    }

    /**
     * Set the value of pais.
     *
     * @param string $pais
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setPais($pais)
    {
        $this->pais = $pais;

        return $this;
    }

    /**
     * Get the value of pais.
     *
     * @return string
     */
    public function getPais()
    {
        return $this->pais;
    }

    /**
     * Set the value of obs.
     *
     * @param string $obs
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setObs($obs)
    {
        $this->obs = $obs;

        return $this;
    }

    /**
     * Get the value of obs.
     *
     * @return string
     */
    public function getObs()
    {
        return $this->obs;
    }

    /**
     * Add Order entity to collection (one to many).
     *
     * @param \App\Models\Doctrine\Entities\Order $order
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function addOrder(Order $order)
    {
        $this->orders[] = $order;

        return $this;
    }

    /**
     * Remove Order entity from collection (one to many).
     *
     * @param \App\Models\Doctrine\Entities\Order $order
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function removeOrder(Order $order)
    {
        $this->orders->removeElement($order);

        return $this;
    }

    /**
     * Get Order entity collection (one to many).
     *
     * @return \Doctrine\Common\Collections\Collection
     */
    public function getOrders()
    {
        return $this->orders;
    }

    /**
     * Set Partner entity (many to one).
     *
     * @param \App\Models\Doctrine\Entities\Partner $partner
     * @return \App\Models\Doctrine\Entities\Address
     */
    public function setPartner(Partner $partner = null)
    {
        $this->partner = $partner;

        return $this;
    }

    /**
     * Get Partner entity (many to one).
     *
     * @return \App\Models\Doctrine\Entities\Partner
     */
    public function getPartner()
    {
        return $this->partner;
    }

    public function __sleep()
    {
        return array('id', 'created_at', 'updated_at', 'deleted_at', 'mandante', 'partner_id', 'cep', 'logradouro', 'numero', 'complemento', 'bairro', 'cidade', 'estado', 'pais', 'obs');
    }
}